doctype html
html(lang="en")
  head
    title BEM — Block Element Modificator
    link(rel="icon", type="image/png", href="favicon.png")
    meta(charset="utf-8")
    link(rel="stylesheet" href="index.css")
  body.page
    .menu
      .menu__heading Get BEM
      a.menu__item(href="#naming") Name
      a.menu__item(href="#structure") Structure
      a.menu__item(href="#build") Build
      a.menu__item(href="https://github.com/floatdrop/awesome-bem") Awesome!
    +header
      | Block Element Modificator is methodology, that helps you achieve reusable components and code sharing in the front-end
    .container
      .grid
        .grid__col_1-3_sm.grid__col_1
          +advantage('Easy')
            | To use BEM you literally do not need nothing besides BEM naming.
        .grid__col_1-3_sm.grid__col_1
          +advantage('Modular')
            | Independent blocks and css selectors plus layer system makes your code reusable and modular.
        .grid__col_1-3_sm.grid__col_1
          +advantage('Flexible')
            | Methodology and tools, that can be recomposed and configured in the way you like BEM.
    .separator
    .container
      a#get-started
      +step('BEM naming')
        :markdown
          To start using BEM you only need to know about [BEM naming conventions](http://cssguidelin.es/#bem-like-naming). We recommend using `_` and `__` as delimeters for Elements and Modificators. After you have Blocks and Elements on your page, you can reorganize your CSS files.
      +step('Layers')
        :markdown
          We grouping Blocks into directories, that called `Layers`. Because of Blocks are independent inside one Layer, CSS files in Layer directory can be concatinated without ordering.
      +step('Build')
        :markdown
          Building static site with BEM is easy &mdash; you just need to concatinate CSS files with respect of layers ordering.
